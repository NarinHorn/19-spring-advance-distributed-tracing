plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

allprojects {
    apply plugin : 'java'
    apply plugin : 'org.springframework.boot'
    apply plugin : 'io.spring.dependency-management'


    group = 'com.example'
    version = '0.0.1-SNAPSHOT'
    description = 'service-discovery'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    repositories {
        mavenCentral()
    }

    ext {
        set('springCloudVersion', "2025.0.0")
    }

    dependencies {
//        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        if (project.name.contains("service")) {
            implementation 'io.github.openfeign:feign-micrometer' // This will now be found

            // Micrometer Tracing Bridge (the successor to Sleuth) (replacement for Sleuth)
            implementation 'io.micrometer:micrometer-tracing-bridge-brave'

            // Zipkin Reporter to send traces to Zipkin
            implementation 'io.zipkin.reporter2:zipkin-reporter-brave'

            // Optional: expose metrics to Prometheus/Grafana too
            implementation 'io.micrometer:micrometer-registry-prometheus'

            // For health checks and management endpoints
            implementation 'org.springframework.boot:spring-boot-starter-actuator'

//            implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
            implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
            runtimeOnly 'org.postgresql:postgresql'
            implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
            implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
            compileOnly 'org.projectlombok:lombok'
            annotationProcessor 'org.projectlombok:lombok'
        }

    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}
